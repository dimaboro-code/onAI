from openai import AsyncOpenAI
from src.config import MODEL, OPENAI_API_KEY, logger

client = AsyncOpenAI(api_key=OPENAI_API_KEY)


async def get_answer(json_messages: list[dict]) -> str:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ OpenAI.

    Args:
        json_messages (list[dict]): –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ OpenAI API.

    Returns:
        str: –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏.
    """
    try:
        logger.info("üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenAI...")
        response = await client.chat.completions.create(
            model=MODEL,
            messages=json_messages,
        )
        answer: str = response.choices[0].message.content
        logger.info("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç OpenAI –ø–æ–ª—É—á–µ–Ω")
        logger.debug(f"üìú –û—Ç–≤–µ—Ç: {answer}")
        return answer
    except Exception as e:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI:", exc_info=e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI."
